.PHONY: build archive logs ssh clean \
				build-web run-web test_web clean-web

IMAGE_BUILD := xybersolve/gmilligan.angular
CONTAINER_BUILD := gmilligan.angular
FILE_BUILD := Dockerfile.build.in-place

IMAGE_WEB := xybersolve/gmilligan.web
CONTAINER_WEB := gmilligan.web

FILE_WEB := Dockerfile.nginx

IP =: $(shell docker-machine ip $(shell docker-machine active))

include info.mk

build:
	${INFO} "Build the Angular project..."
	@docker build --tag $(IMAGE_BUILD) -f $(FILE_BUILD) .

run:
	@docker run -d $(IMAGE_BUILD)

archive: ## Build and archive the build artifacts
	${INFO} "Copy build artifacts to the local build directory..."
	@docker cp $(CONTAINER_BUILD):/usr/app/build/. ./build

logs:
	@docker logs -f $(CONTAINER_BUILD)

ssh: ## SSH into image
	${INFO} "SSH into the Angular build image..."
	@docker run -it --rm $(IMAGE_BUILD) bash

clean: # stop, clean all
	@docker container stop $(CONTAINER_BUILD) || true
	@docker container rm $(CONTAINER_BUILD) || true
	@docker image rm $(IMAGE_BUILD) || true


build-web:
	@docker build --tag $(IMAGE_WEB) -f $(FILE_WEB) .

run-web:
	@docker run --name $(CONTAINER_WEB) -p 80:80 -d $(IMAGE_WEB)

test-web:
	@curl -u admin:admin123 http://$(IP):8081/service/metrics/ping

clean-web:
	@docker container stop $(CONTAINER_WEB) || true
	@docker container rm $(CONTAINER_WEB) || true
	@docker image rm $(IMAGE_WEB) || true


# publish static build
#docker build -t gmilligan .
#docker run -p 80:80 gmilligan
#docker run -p 80:80 -v ${PWD}:/usr/share/nginx/html gmilligan
